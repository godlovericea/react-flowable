[{"/Users/liuyan/programCode/ReactDemo/react-flowable/src/index.js":"1","/Users/liuyan/programCode/ReactDemo/react-flowable/src/App.js":"2","/Users/liuyan/programCode/ReactDemo/react-flowable/src/reportWebVitals.js":"3","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/process/Process.jsx":"4","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/task/Task.jsx":"5","/Users/liuyan/programCode/ReactDemo/react-flowable/src/components/Modeler.jsx":"6","/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/customTranslate.js":"7","/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/translations.js":"8","/Users/liuyan/programCode/ReactDemo/react-flowable/src/apis/process.js":"9","/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/request.js":"10","/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/config.js":"11","/Users/liuyan/programCode/ReactDemo/react-flowable/src/router/Router.js":"12"},{"size":677,"mtime":1610355140093,"results":"13","hashOfConfig":"14"},{"size":563,"mtime":1609836783586,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609209707612,"results":"16","hashOfConfig":"14"},{"size":8014,"mtime":1609837535264,"results":"17","hashOfConfig":"14"},{"size":271,"mtime":1609209707611,"results":"18","hashOfConfig":"14"},{"size":1812,"mtime":1609834969037,"results":"19","hashOfConfig":"14"},{"size":342,"mtime":1608192154930,"results":"20","hashOfConfig":"14"},{"size":1222,"mtime":1608199202410,"results":"21","hashOfConfig":"14"},{"size":880,"mtime":1609753625655,"results":"22","hashOfConfig":"14"},{"size":2852,"mtime":1609752726520,"results":"23","hashOfConfig":"14"},{"size":228,"mtime":1609813285717,"results":"24","hashOfConfig":"14"},{"size":385,"mtime":1609308777434,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5svy4m",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/liuyan/programCode/ReactDemo/react-flowable/src/index.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/App.js",[],["57","58"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/reportWebVitals.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/process/Process.jsx",["59","60","61"],"import React from \"react\";\nimport { GetWorkflowBaseInfo, UpdateStatus, CreateModel, flowableLogin } from '../../apis/process'\n// import Modeler from \"../../components/Modeler\";\nimport { Table, Tag, Space, Button, Form, Input, DatePicker, Pagination, Modal } from 'antd';\nconst { RangePicker } = DatePicker;\nconst { TextArea } = Input;\nconst { Column } = Table;\nclass Process extends React.Component{\n    state={\n        tableData: [],// 表格数据\n        name: '', // 检索栏流程名称\n        startDate: '',// 检索栏起始日期\n        endDate: '',// 检索栏截止日期\n        total: 0, // 数据总数\n        curPage: 1,// 当前页码\n        pageSize: 10,// 当前分页条数\n        confirmLoading: false,// 加载新增接口loading效果\n        visible: false, // 模态框显示隐藏\n        processName: '',// 新增流程名称\n        processKey: '',// 新增流程标识\n        processDesc: '',// 新增流程描述\n        cookieData: ''\n    }\n    mockLogin=()=>{\n        const myData = {\n            j_username: 'admin',\n            j_password: 'test',\n            submit: 'Login',\n            _spring_security_remember_me: true\n        }\n        flowableLogin(myData)\n        .then((res)=>{\n            let cookieData = res.data.split(';')[0].split('=')[1]\n            this.setState({\n                cookieData: cookieData\n            })\n        })\n    }\n    handleProName = (e)=>{\n        this.setState({\n            name: e.target.value\n        })\n    }\n    handleDateChange =(date, dateString)=>{\n        console.log(date)\n        console.log(dateString)\n        this.setState({\n            startDate: !dateString[0] ? '' : dateString[0] + ' ' + '00:00:00',\n            endDate: !dateString[1]? '' : dateString[1] + ' ' +'23:59:59',\n        })\n        console.log(this.state.startDate)\n        console.log(this.state.endDate)\n    }\n    handlePageChange =(curPage, pageSize) => {\n        console.log(curPage)\n        console.log(pageSize)\n        this.setState({\n            curPage: curPage,\n            pageSize: pageSize\n        })\n        this.getData()\n    }\n    handlePageSizeChange=(page, size)=>{\n        console.log(page)\n        console.log(size)\n    }\n    // 拉取数据\n    getData = ()=> {\n        GetWorkflowBaseInfo(this.state.name,this.state.startDate || '',this.state.endDate || '',this.state.curPage, this.state.pageSize)\n        .then(res=>{\n            this.setState({\n                tableData: res.data.getMe,\n                total: res.data.totalRcdNum\n            })\n        })\n    }\n    // 删除流程\n    delProcess =(record) =>{\n        return ()=>{\n            UpdateStatus(record.ID, 0)\n            .then((res)=>{\n                this.getData()\n            })\n        }\n    }\n    handleOk=()=>{\n        const myData = {\n            name: this.state.processName,\n            key: this.state.processKey,\n            description: this.state.processDesc,\n            modelType: 0\n        }\n        CreateModel(this.state.cookieData, myData)\n        .then((res)=>{\n            console.log(res)\n            this.setState({\n                visible: false\n            })\n        })\n    }\n    handleCancel=()=>{\n        this.setState({\n            visible: false\n        })\n    }\n    handleCreateProcessName=(e)=>{\n        this.setState({\n            processName: e.target.value\n        })\n    }\n    handleCreateProcessKey=(e)=>{\n        this.setState({\n            processKey: e.target.value\n        })\n    }\n    handleCreateProcessDesc=(e)=>{\n        this.setState({\n            processDesc: e.target.value\n        })\n    }\n    openModal=()=>{\n        this.setState({\n            visible: true\n        })\n    }\n    componentDidMount() {\n        this.getData()\n        this.mockLogin()\n        \n    }\n    render() {\n        return(\n            <div className=\"modeler-wrapper\">\n                {/* <Modeler></Modeler> */}\n                <Form layout=\"inline\" >\n                    <Form.Item label=\"流程名称\">\n                        <Input placeholder=\"请输入流程名称\" allowClear onChange={this.handleProName}/>\n                    </Form.Item>\n                    <Form.Item label=\"日期范围\">\n                        <RangePicker\n                            format={'YYYY-MM-DD'}\n                            onChange={this.handleDateChange}\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" onClick={this.getData}>查询</Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" onClick={this.openModal}>新增</Button>\n                    </Form.Item>\n                </Form>\n                <Table dataSource={this.state.tableData} pagination={false}>\n                    <Column title=\"流程名称\" dataIndex=\"WorkflowName\" key=\"WorkflowName\" />\n                    <Column title=\"流程标识\" dataIndex=\"Key\" key=\"Key\" />\n                    <Column title=\"创建时间\" dataIndex=\"Creatime\" key=\"Creatime\" />\n                    <Column title=\"最后修改时间\" dataIndex=\"LastUpdateTime\" key=\"LastUpdateTime\" />\n                    <Column title=\"流程版本\" dataIndex=\"Version\" key=\"Version\" />\n                    <Column title=\"部署编码\" dataIndex=\"DeployCode\" key=\"DeployCode\" />\n                    <Column\n                        title=\"操作\"\n                        key=\"action\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                                {\n                                    !record.FlowID ?\n                                    <div>\n                                        <Button type=\"ghost\">编辑{record.name}</Button>\n                                        <Button type=\"primary\">部署{record.name}</Button>\n                                        <Button type=\"danger\" onClick={this.delProcess(record)}>删除</Button>\n                                    </div>\n                                    :\n                                    <div>\n                                        <Button type=\"primary\">发起</Button>\n                                        <Button type=\"primary\">取消部署</Button>\n                                    </div>\n                                }\n                            </Space>\n                        )}\n                    />\n                </Table>\n                <Modal\n                    title=\"新增流程\"\n                    visible={this.state.visible}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    onOk={this.handleOk}\n                    confirmLoading={this.state.confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <Form layout=\"vertical\" preserve={false}>\n                        <Form.Item label=\"流程名称\">\n                            <Input placeholder=\"请输入流程名称\" onChange={this.handleCreateProcessName}/>\n                        </Form.Item>\n                        <Form.Item label=\"流程标识\">\n                            <Input placeholder=\"请输入流程标识\" onChange={this.handleCreateProcessKey}/>\n                        </Form.Item>\n                        <Form.Item label=\"流程描述\">\n                            <TextArea placeholder=\"请输入流程描述\" onChange={this.handleCreateProcessDesc}></TextArea>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Pagination\n                    current={this.state.curPage}\n                    total={this.state.total}\n                    showSizeChanger\n                    showQuickJumper\n                    onChange = {this.handlePageChange}\n                    onShowSizeChange={this.handlePageSizeChange}\n                    showTotal={total => `共 ${total} 条数据`}>\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nexport default Process","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/task/Task.jsx",["62"],"import React from \"react\";\n\nclass Task extends React.Component{\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        return(\n            <div className=\"modeler-wrapper\">\n                Task\n            </div>\n        )\n    }\n}\n\nexport default Task",["63","64"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/components/Modeler.jsx",[],["65","66"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/customTranslate.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/translations.js",["67"],"/**\n * This is a sample file that should be replaced with the actual translation.\n *\n * Checkout https://github.com/bpmn-io/bpmn-js-i18n for a list of available\n * translations and labels to translate.\n */\nexport default {\n    'Exclusive Gateway': 'Exklusives Gateway',\n    'Parallel Gateway': 'Paralleles Gateway',\n    'Inclusive Gateway': 'Inklusives Gateway',\n    'Complex Gateway': 'Komplexes Gateway',\n    'Event based Gateway': 'Ereignis-basiertes Gateway',\n    'Message Start Event': '消息启动事件',\n    'Timer Start Event': '定时启动事件',\n    'Conditional Start Event': '条件启动事件',\n    'Signal Start Event': '信号启动事件',\n    'Error Start Event': '错误启动事件',\n    'Escalation Start Event': '升级启动事件',\n    'Compensation Start Event': '补偿启动事件',\n    'Message Start Event (non-interrupting)': '消息启动事件 (非中断)',\n    'Timer Start Event (non-interrupting)': '定时启动事件 (非中断)',\n    'Conditional Start Event (non-interrupting)': '条件启动事件 (非中断)',\n    'Signal Start Event (non-interrupting)': '信号启动事件 (非中断)',\n    'Escalation Start Event (non-interrupting)': '升级启动事件 (非中断)',\n  };","/Users/liuyan/programCode/ReactDemo/react-flowable/src/apis/process.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/request.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/config.js",[],["68","69"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/router/Router.js",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":17,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":48,"column":66,"nodeType":"83","messageId":"84","endLine":48,"endColumn":67},{"ruleId":"81","severity":1,"message":"82","line":49,"column":63,"nodeType":"83","messageId":"84","endLine":49,"endColumn":64},{"ruleId":"85","severity":1,"message":"86","line":4,"column":5,"nodeType":"87","messageId":"88","endLine":6,"endColumn":6},{"ruleId":"73","replacedBy":"89"},{"ruleId":"75","replacedBy":"90"},{"ruleId":"73","replacedBy":"91"},{"ruleId":"75","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":7,"column":1,"nodeType":"95","endLine":25,"endColumn":5},{"ruleId":"73","replacedBy":"96"},{"ruleId":"75","replacedBy":"97"},{"ruleId":"77","severity":1,"message":"98","line":2,"column":49,"nodeType":"79","messageId":"80","endLine":2,"endColumn":53},{"ruleId":"99","severity":2,"message":"100","line":8,"column":50,"nodeType":"79","messageId":"101","endLine":8,"endColumn":57},{"ruleId":"99","severity":2,"message":"102","line":9,"column":48,"nodeType":"79","messageId":"101","endLine":9,"endColumn":52},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["103"],["104"],["103"],["104"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["103"],["104"],"'Link' is defined but never used.","no-undef","'Process' is not defined.","undef","'Task' is not defined.","no-global-assign","no-unsafe-negation"]