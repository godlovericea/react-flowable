[{"/Users/liuyan/programCode/ReactDemo/react-flowable/src/index.js":"1","/Users/liuyan/programCode/ReactDemo/react-flowable/src/App.js":"2","/Users/liuyan/programCode/ReactDemo/react-flowable/src/reportWebVitals.js":"3","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/process/Process.jsx":"4","/Users/liuyan/programCode/ReactDemo/react-flowable/src/components/Modeler.jsx":"5","/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/customTranslate.js":"6","/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/translations.js":"7","/Users/liuyan/programCode/ReactDemo/react-flowable/src/apis/process.js":"8","/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/request.js":"9","/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/config.js":"10","/Users/liuyan/programCode/ReactDemo/react-flowable/src/router/Router.js":"11","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/EditForm/EditForm.jsx":"12","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/ShowForm/ShowForm.jsx":"13","/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/transform/transform.js":"14","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/NewForm/NewForm.jsx":"15","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/Transform/Transform.jsx":"16","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/Customize/Customize.jsx":"17","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/Customize/Cascader/Cascader.jsx":"18"},{"size":725,"mtime":1612422998147,"results":"19","hashOfConfig":"20"},{"size":939,"mtime":1612680727247,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609209707612,"results":"22","hashOfConfig":"20"},{"size":7835,"mtime":1612665373601,"results":"23","hashOfConfig":"20"},{"size":1812,"mtime":1609834969037,"results":"24","hashOfConfig":"25"},{"size":342,"mtime":1608192154930,"results":"26","hashOfConfig":"25"},{"size":1222,"mtime":1608199202410,"results":"27","hashOfConfig":"25"},{"size":1898,"mtime":1612667430214,"results":"28","hashOfConfig":"20"},{"size":2852,"mtime":1609752726520,"results":"29","hashOfConfig":"20"},{"size":294,"mtime":1612666975533,"results":"30","hashOfConfig":"20"},{"size":385,"mtime":1609308777434,"results":"31","hashOfConfig":"25"},{"size":3806,"mtime":1612517403598,"results":"32","hashOfConfig":"20"},{"size":1587,"mtime":1612662816558,"results":"33","hashOfConfig":"20"},{"size":2491,"mtime":1612678363779,"results":"34","hashOfConfig":"20"},{"size":4257,"mtime":1612517089926,"results":"35","hashOfConfig":"20"},{"size":1130,"mtime":1612678518690,"results":"36","hashOfConfig":"20"},{"size":1068,"mtime":1612765858839,"results":"37","hashOfConfig":"20"},{"size":1264,"mtime":1612691420549,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"dbcntr",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"5svy4m",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/liuyan/programCode/ReactDemo/react-flowable/src/index.js",[],["82","83"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/App.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/reportWebVitals.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/process/Process.jsx",["84","85","86","87","88","89"],"import React from \"react\";\nimport { GetWorkflowBaseInfo, UpdateStatus, CreateModel, flowableLogin, GetFormListInfo } from '../../apis/process'\n// import Modeler from \"../../components/Modeler\";\nimport { Table, Space, Button, Form, Input, Pagination, Modal } from 'antd';\nimport './process.less'\nconst { TextArea } = Input;\nconst { Column } = Table;\nclass Process extends React.Component{\n    state={\n        tableData: [],// 表格数据\n        name: '', // 检索栏流程名称\n        startDate: '',// 检索栏起始日期\n        endDate: '',// 检索栏截止日期\n        total: 0, // 数据总数\n        curPage: 1,// 当前页码\n        pageSize: 20,// 当前分页条数\n        confirmLoading: false,// 加载新增接口loading效果\n        visible: false, // 模态框显示隐藏\n        processName: '',// 新增流程名称\n        processKey: '',// 新增流程标识\n        processDesc: '',// 新增流程描述\n        cookieData: ''\n    }\n    handleProName = (e)=>{\n        this.setState({\n            name: e.target.value\n        })\n    }\n    handleDateChange =(date, dateString)=>{\n        console.log(date)\n        console.log(dateString)\n        this.setState({\n            startDate: !dateString[0] ? '' : dateString[0] + ' ' + '00:00:00',\n            endDate: !dateString[1]? '' : dateString[1] + ' ' +'23:59:59',\n        })\n    }\n    handlePageChange =(curPage, pageSize) => {\n        this.setState({\n            curPage: curPage,\n            pageSize: pageSize\n        },()=>{\n            console.log(this.state.curPage,this.state.pageSize)\n            this.getData()\n        })\n        \n    }\n    handlePageSizeChange=(page, size)=>{\n        console.log(page)\n        console.log(size)\n    }\n    // 拉取数据\n    getData = ()=> {\n        GetFormListInfo(this.state.name,this.state.curPage, this.state.pageSize)\n        .then(res=>{\n            this.setState({\n                tableData: res.data.getMe,\n                total: res.data.totalRcdNum\n            })\n        })\n    }\n    // 删除流程\n    delProcess =(record) =>{\n        return ()=>{\n            UpdateStatus(record.ID, 0)\n            .then((res)=>{\n                this.getData()\n            })\n        }\n    }\n    handleOk=()=>{\n        const myData = {\n            name: this.state.processName,\n            key: this.state.processKey,\n            description: this.state.processDesc,\n            modelType: 2\n        }\n        CreateModel(this.state.cookieData, myData)\n        .then((res)=>{\n            console.log(res)\n            this.setState({\n                visible: false\n            })\n        })\n    }\n    handleCancel=()=>{\n        this.setState({\n            visible: false\n        })\n    }\n    handleCreateProcessName=(e)=>{\n        this.setState({\n            processName: e.target.value\n        })\n    }\n    handleCreateProcessKey=(e)=>{\n        this.setState({\n            processKey: e.target.value\n        })\n    }\n    handleCreateProcessDesc=(e)=>{\n        this.setState({\n            processDesc: e.target.value\n        })\n    }\n    openModal=()=>{\n        this.props.history.push({\n            pathname: '/new'\n        })\n    }\n    goEdit=(id,name,key,desc)=>{\n        return ()=>{\n            this.props.history.push({\n                pathname: '/edit',\n                state:{\n                    id: id,\n                    name: name,\n                    key: key,\n                    desc: desc\n                }\n            })\n        }\n    }\n    goShow=(id)=>{\n        // console.log(id)\n        return ()=>{\n            this.props.history.push({\n                pathname: '/show',\n                state:{\n                    id: id\n                }\n            })\n        }\n        \n    }\n    componentDidMount() {\n        this.getData()        \n    }\n    render() {\n        return(\n            <div className=\"modeler-wrapper\">\n                {/* <Modeler></Modeler> */}\n                <Form layout=\"inline\" >\n                    <Form.Item label=\"流程名称\">\n                        <Input placeholder=\"请输入流程名称\" allowClear onChange={this.handleProName}/>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button className=\"localBtnClass\" size=\"small\" type=\"primary\" onClick={this.getData}>查询</Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button className=\"localBtnClass\" size=\"small\" type=\"primary\" onClick={this.openModal}>新增</Button>\n                    </Form.Item>\n                </Form>\n                <Table dataSource={this.state.tableData} pagination={false} rowClassName=\"rowClassName\">\n                    <Column title=\"流程名称\" dataIndex=\"name\" key=\"WorkflowName\" />\n                    <Column title=\"流程标识\" dataIndex=\"key\" key=\"Key\" />\n                    <Column title=\"创建人\" dataIndex=\"createdBy\" key=\"createdBy\" />\n                    <Column title=\"创建时间\" dataIndex=\"created\" key=\"created\" />\n                    <Column title=\"最后修改时间\" dataIndex=\"lastUpdated\" key=\"lastUpdated\" />\n                    <Column\n                        title=\"操作\"\n                        key=\"action\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                                {\n                                    record.createdBy ?\n                                    <div>\n                                        <Button className=\"localBtnClass\" size=\"small\" type=\"primary\" style={{marginRight:\"10px\"}} onClick={this.goEdit(record.id, record.name, record.key, record.description)}>编辑</Button>\n                                        <Button className=\"localBtnClass\" size=\"small\" type=\"primary\" onClick={this.goShow(record.id)}>查看</Button>\n                                    </div>\n                                    :\n                                    <div>\n                                        <Button className=\"localBtnClass\" size=\"small\" type=\"primary\" onClick={this.goShow(record.id)}>查看</Button>\n                                    </div>\n                                }\n                            </Space>\n                        )}\n                    />\n                </Table>\n                {/* <Modal\n                    title=\"新增表单\"\n                    visible={this.state.visible}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    onOk={this.handleOk}\n                    confirmLoading={this.state.confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <Form layout=\"vertical\" preserve={false}>\n                        <Form.Item label=\"表单名称\">\n                            <Input placeholder=\"请输入表单名称\" onChange={this.handleCreateProcessName}/>\n                        </Form.Item>\n                        <Form.Item label=\"表单标识\">\n                            <Input placeholder=\"请输入表单标识\" onChange={this.handleCreateProcessKey}/>\n                        </Form.Item>\n                        <Form.Item label=\"表单描述\">\n                            <TextArea placeholder=\"请输入表单描述\" onChange={this.handleCreateProcessDesc}></TextArea>\n                        </Form.Item>\n                    </Form>\n                </Modal> */}\n                <Pagination\n                    current={this.state.curPage}\n                    total={this.state.total}\n                    showSizeChanger\n                    showQuickJumper\n                    defaultPageSize={20}\n                    onChange = {this.handlePageChange}\n                    showTotal={total => `共 ${total} 条数据`}>\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nexport default Process","/Users/liuyan/programCode/ReactDemo/react-flowable/src/components/Modeler.jsx",[],["90","91"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/customTranslate.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/customTranslate/translations.js",["92"],"/**\n * This is a sample file that should be replaced with the actual translation.\n *\n * Checkout https://github.com/bpmn-io/bpmn-js-i18n for a list of available\n * translations and labels to translate.\n */\nexport default {\n    'Exclusive Gateway': 'Exklusives Gateway',\n    'Parallel Gateway': 'Paralleles Gateway',\n    'Inclusive Gateway': 'Inklusives Gateway',\n    'Complex Gateway': 'Komplexes Gateway',\n    'Event based Gateway': 'Ereignis-basiertes Gateway',\n    'Message Start Event': '消息启动事件',\n    'Timer Start Event': '定时启动事件',\n    'Conditional Start Event': '条件启动事件',\n    'Signal Start Event': '信号启动事件',\n    'Error Start Event': '错误启动事件',\n    'Escalation Start Event': '升级启动事件',\n    'Compensation Start Event': '补偿启动事件',\n    'Message Start Event (non-interrupting)': '消息启动事件 (非中断)',\n    'Timer Start Event (non-interrupting)': '定时启动事件 (非中断)',\n    'Conditional Start Event (non-interrupting)': '条件启动事件 (非中断)',\n    'Signal Start Event (non-interrupting)': '信号启动事件 (非中断)',\n    'Escalation Start Event (non-interrupting)': '升级启动事件 (非中断)',\n  };","/Users/liuyan/programCode/ReactDemo/react-flowable/src/apis/process.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/request.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/utils/config.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/router/Router.js",["93","94","95"],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/EditForm/EditForm.jsx",["96","97"],"import React from 'react';\nimport Generator from 'fr-generator';\nimport { CreateModel,GetFormJson, UpdateFormDef } from '../../apis/process'\nimport {Modal, Form, Input, Button} from 'antd'\n// import FormTransfer from '../../libs/transform/transform'\n\nconst templates = [\n  {\n    text: '模板1',\n    name: 'something',\n    schema: {\n      title: '对象',\n      description: '这是一个对象类型',\n      type: 'object',\n      properties: {\n        inputName: {\n          title: '简单输入框',\n          type: 'string',\n        },\n        selectName: {\n          title: '单选',\n          type: 'string',\n          enum: ['a', 'b', 'c'],\n          enumNames: ['早', '中', '晚'],\n        },\n        dateName: {\n          title: '时间选择',\n          type: 'string',\n          format: 'date',\n        },\n      },\n    },\n  },\n];\n\nclass EditForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.genRef = React.createRef();\n        this.formNameRef = React.createRef();\n        this.formKeyRef = React.createRef();\n        this.formDescRef = React.createRef();\n        this.state = {\n            isModalVisible: false,\n            defaultValue: {},\n            templates: []\n        }\n        this.extraButtons = [\n            true, true, false, true, \n            { \n                text: '确定修改',\n                type: 'primary',\n                onClick: () => this.handleScheam()\n            },\n            { \n                text: '返回列表',\n                type: 'primary',\n                onClick: () => this.goBackToHome()\n            }\n        ]\n    }\n    componentDidMount(){\n        this.getData()\n    }\n    getData =()=>{\n        const id = this.props.location.state.id\n        GetFormJson(id)\n          .then((res)=>{\n              if (res.status === 200) {\n                  this.setState({\n                    defaultValue: JSON.parse(res.data)\n                  })\n              }\n          })\n    }\n    handleScheam = ()=>{\n      this.handleOk()\n    }\n    handleCancel= ()=>{\n        this.setState({\n            isModalVisible: false\n        })\n    }\n    goBackToHome=()=>{\n        this.props.history.push({\n            pathname: '/home'\n        })\n      }\n    handleOk=()=>{\n        const FormInfo = this.genRef.current && this.genRef.current.getValue()\n        const params = {\n            FormInfo: JSON.stringify(FormInfo),\n            description:this.props.location.state.desc,\n            key: this.props.location.state.key,\n            modelType:2,\n            name: this.props.location.state.name\n        }\n        UpdateFormDef(this.props.location.state.id,params)\n        .then(res=>{\n            alert(\"修改成功\")\n        })\n    }\n    render(){\n        return(\n            <div style={{ height: '100vh' }}>\n                <Generator ref={this.genRef} defaultValue={this.state.defaultValue} templates={templates} extraButtons={this.extraButtons}/>\n                <Modal title=\"保存表单\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel}>\n                    <Form layout={\"horizontal\"}>\n                        <Form.Item label=\"表单名称\">\n                            <Input ref={this.formNameRef} placeholder=\"请输入表单名称\" />\n                        </Form.Item>\n                        <Form.Item label=\"表单标识\">\n                            <Input ref={this.formKeyRef} placeholder=\"请输入表单标识\" />\n                        </Form.Item>\n                        <Form.Item label=\"表单备注\">\n                            <Input ref={this.formDescRef} placeholder=\"请输入表单备注\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default EditForm;\n","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/ShowForm/ShowForm.jsx",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/libs/transform/transform.js",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/NewForm/NewForm.jsx",["98","99"],"import React from 'react';\nimport Generator from 'fr-generator';\nimport { CreateModel,GetFormJson } from '../../apis/process'\nimport {Modal, Form, Input, Button} from 'antd'\n// import FormTransfer from '../../libs/transform/transform'\n\n\nconst defaultValue = {\n    schema: {\n      type: 'object',\n      properties: {\n        inputName: {\n          title: '简单输入框',\n          type: 'string',\n        },\n      },\n    },\n    displayType: 'row',\n    showDescIcon: true,\n    labelWidth: 120,\n  };\nconst templates = [\n  {\n    text: '模板1',\n    name: 'something',\n    schema: {\n      title: '对象',\n      description: '这是一个对象类型',\n      type: 'object',\n      properties: {\n        inputName: {\n          title: '简单输入框',\n          type: 'string',\n        },\n        selectName: {\n          title: '单选',\n          type: 'string',\n          enum: ['a', 'b', 'c'],\n          enumNames: ['早', '中', '晚'],\n        },\n        dateName: {\n          title: '时间选择',\n          type: 'string',\n          format: 'date',\n        },\n      },\n    },\n  },\n];\n\nclass NewForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.genRef = React.createRef();\n        this.formNameRef = React.createRef();\n        this.formKeyRef = React.createRef();\n        this.formDescRef = React.createRef();\n        this.state = {\n            isModalVisible: false,\n            defaultValue: {},\n            templates: []\n        }\n        this.extraButtons = [\n            true, true, false, true, \n            { \n                text: '保存',\n                type: 'primary',\n                onClick: () => this.handleScheam()\n            },\n            { \n                text: '返回列表',\n                onClick: () => this.goBackToList()\n            },\n        ]\n    }\n    handleScheam = ()=>{\n        this.setState({\n            isModalVisible: true\n        })\n    }\n    goBackToList=()=>{\n        this.props.history.push({\n            pathname: '/home'\n        })\n    }\n    handleCancel= ()=>{\n        this.setState({\n            isModalVisible: false\n        })\n    }\n    handleOk=()=>{\n        const FormInfo = this.genRef.current && this.genRef.current.getValue()\n        var cookies = document.cookie\n        var arr = cookies.split(\";\")\n        var cookieKeyVal = \"\"\n        arr.forEach(item=>{\n            if (item.indexOf(\"FLOWABLE_REMEMBER_ME\") > 0) {\n                cookieKeyVal  = item\n            }\n        })\n        var cookie = cookieKeyVal.split(\"=\")[1]\n\n        console.log(this.formNameRef.current.state.value)\n        if (!this.formNameRef.current.state.value) {\n            alert(\"表单名称必填\")\n            return false\n        }\n        const params = {\n            FormInfo: JSON.stringify(FormInfo),\n            description:this.formDescRef.current.state.value,\n            key:this.formKeyRef.current.state.value,\n            modelType:2,\n            name: this.formNameRef.current.state.value\n        }\n        CreateModel(cookie,params)\n        .then(res=>{\n            alert(\"新增成功\")\n            this.setState({\n                isModalVisible: false\n            })\n        })\n    }\n    render(){\n        return(\n            <div style={{ height: '100vh' }}>\n                <Generator ref={this.genRef} defaultValue={defaultValue} templates={templates} extraButtons={this.extraButtons}/>\n                <Modal title=\"保存表单\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel}>\n                    <Form layout={\"horizontal\"}>\n                        <Form.Item label=\"表单名称\">\n                            <Input ref={this.formNameRef} placeholder=\"请输入表单名称\" />\n                        </Form.Item>\n                        <Form.Item label=\"表单标识\">\n                            <Input ref={this.formKeyRef} placeholder=\"请输入表单标识\" />\n                        </Form.Item>\n                        <Form.Item label=\"表单备注\">\n                            <Input ref={this.formDescRef} placeholder=\"请输入表单备注\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default NewForm;\n","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/Transform/Transform.jsx",[],"/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/Customize/Customize.jsx",["100"],"import React, { useState } from \"react\";\nimport FormRender from \"form-render/lib/antd\";\nimport SCHEMA from \"./schema.json\";\nimport Cascade from \"./Cascader/Cascader\";\nclass Demo extends React.Component {\n    state = {\n        formData: {},\n        valid: []\n    }\n\n    submit = () => {\n        if (this.state.valid.length > 0) {\n            alert(\"没有通过校验\");\n        } else {\n            alert(JSON.stringify(this.state.formData, null, 4));\n        }\n    };\n\n    onValidate = valid => {\n        console.log(valid);\n    }\n    listenChange=(params)=>{\n        console.log(params)\n    }\n    render(){\n        return (\n            <div style={{ padding: 60 }}>\n                <FormRender\n                    {...SCHEMA}\n                    formData={this.state.formData}\n                    onChange={this.listenChange}\n                    onValidate={this.onValidate}\n                    widgets={{ cascade: Cascade }}\n                />\n                <button onClick={this.submit}>提交</button>\n            </div>\n        );\n    }\n}\n\nexport default Demo\n","/Users/liuyan/programCode/ReactDemo/react-flowable/src/pages/Customize/Cascader/Cascader.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":29},{"ruleId":"105","severity":1,"message":"109","line":2,"column":58,"nodeType":"107","messageId":"108","endLine":2,"endColumn":71},{"ruleId":"105","severity":1,"message":"110","line":4,"column":57,"nodeType":"107","messageId":"108","endLine":4,"endColumn":62},{"ruleId":"105","severity":1,"message":"111","line":6,"column":9,"nodeType":"107","messageId":"108","endLine":6,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":33,"column":66,"nodeType":"114","messageId":"115","endLine":33,"endColumn":67},{"ruleId":"112","severity":1,"message":"113","line":34,"column":63,"nodeType":"114","messageId":"115","endLine":34,"endColumn":64},{"ruleId":"101","replacedBy":"116"},{"ruleId":"103","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":7,"column":1,"nodeType":"120","endLine":25,"endColumn":5},{"ruleId":"105","severity":1,"message":"121","line":2,"column":49,"nodeType":"107","messageId":"108","endLine":2,"endColumn":53},{"ruleId":"122","severity":2,"message":"123","line":8,"column":50,"nodeType":"107","messageId":"124","endLine":8,"endColumn":57},{"ruleId":"122","severity":2,"message":"125","line":9,"column":48,"nodeType":"107","messageId":"124","endLine":9,"endColumn":52},{"ruleId":"105","severity":1,"message":"126","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":21},{"ruleId":"105","severity":1,"message":"127","line":4,"column":29,"nodeType":"107","messageId":"108","endLine":4,"endColumn":35},{"ruleId":"105","severity":1,"message":"128","line":3,"column":22,"nodeType":"107","messageId":"108","endLine":3,"endColumn":33},{"ruleId":"105","severity":1,"message":"127","line":4,"column":29,"nodeType":"107","messageId":"108","endLine":4,"endColumn":35},{"ruleId":"105","severity":1,"message":"129","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'GetWorkflowBaseInfo' is defined but never used.","Identifier","unusedVar","'flowableLogin' is defined but never used.","'Modal' is defined but never used.","'TextArea' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["130"],["131"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","no-undef","'Process' is not defined.","undef","'Task' is not defined.","'CreateModel' is defined but never used.","'Button' is defined but never used.","'GetFormJson' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]